From e9ad1e7f22c64e6b7a26084ba61c51c45b09a5ca Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Eduard=20Vintil=C4=83?= <eduard.vintila47@gmail.com>
Date: Fri, 9 Dec 2022 23:28:05 +0200
Subject: [PATCH 1/2] uk_syscall_r-patch
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Use the `uk_syscall_r()` variant for system call numbers
known only at runtime.

Signed-off-by: Eduard VintilÄƒ <eduard.vintila47@gmail.com>
---
 src/internal/syscall.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/internal/syscall.h b/src/internal/syscall.h
index 9419ea9..83fa584 100644
--- a/src/internal/syscall.h
+++ b/src/internal/syscall.h
@@ -45,8 +45,8 @@ long __syscall_ret(unsigned long), __syscall(uk_syscall_arg_t, ...),
 static inline long __alt_socketcall(int sys, int sock, int cp, long a, long b, long c, long d, long e, long f)
 {
 	long r;
-	if (cp) r = __syscall_cp(sys, a, b, c, d, e, f);
-	else r = __syscall(sys, a, b, c, d, e, f);
+	if (cp) r = uk_syscall_r(sys, a, b, c, d, e, f);
+	else r = uk_syscall_r(sys, a, b, c, d, e, f);
 	if (r != -ENOSYS) return r;
 #ifdef SYS_socketcall
 	if (cp) r = __syscall_cp(SYS_socketcall, sock, ((long[6]){a, b, c, d, e, f}));
--
2.38.1

